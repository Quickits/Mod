apply {
    plugin "com.android.application"

    plugin "kotlin-android"

    plugin "kotlin-android-extensions"
}

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion Config.buildToolsVersion

    defaultConfig {
        applicationId Config.applicationId + suffix
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "app_name", Config.appName + suffix
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }
}

dependencies {
    for (Map.Entry<String, DpdInfo> entry : DpdManager.pkgDependencies) {
        api entry.value.dep
    }

    for (Map.Entry<String, DpdInfo> entry : DpdManager.testDependencies) {
        testImplementation entry.value.dep
    }

    for (Map.Entry<String, DpdInfo> entry : DpdManager.androidTestDependencies) {
        androidTestImplementation entry.value.dep
    }
}

def getSuffix() {
    if (project.path == ":app") return ""

    return project.path.replace(":", "_").substring(":features".length(), project.path.length() - ":app".length())
}